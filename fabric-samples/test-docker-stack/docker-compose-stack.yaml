version: '3'

networks:
  first-network:
    external:
      name: first-network

services:
    orderer_example_com:
          image: hyperledger/fabric-orderer:${FABRIC_VERSION} 
          environment:
          - FABRIC_LOGGING_SPEC=INFO
          - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
          - ORDERER_GENERAL_GENESISMETHOD=file
          - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
          - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
          - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
          - ORDERER_GENERAL_TLS_ENABLED=true
          - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
          - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
          - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
          - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
          - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
          - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
          - ORDERER_METRICS_PROVIDER=prometheus
  
          working_dir: /opt/gopath/src/github.com/hyperledger/fabric
          command: orderer
          ports:
          - 7050:7050
          - 28443:8443
  
          volumes:
          - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/channel-artifacts/:/etc/hyperledger/configtx
          - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
          networks:
              first-network:
                  aliases:
                  - orderer.example.com 
          deploy:
              placement:
                  constraints: [node.hostname == node-2]

    # orderer2_example_com:
    #     image: hyperledger/fabric-orderer:${FABRIC_VERSION} 
    #     environment:
    #     - FABRIC_LOGGING_SPEC=grpc=debug:debug
    #     - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    #     - ORDERER_GENERAL_GENESISMETHOD=file
    #     - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
    #     - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
    #     - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    #     - ORDERER_GENERAL_TLS_ENABLED=true
    #     - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    #     - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
    #     - ORDERER_METRICS_PROVIDER=prometheus
 
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #     command: orderer
    #     ports:
    #     -  /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
    #     networks:
    #         first-network:
    #             aliases:
    #             - orderer2.example.com 
    #     deploy:
    #         placement:
    #             constraints: [node.hostname == node-3]

    # orderer3_example_com:
    #     image: hyperledger/fabric-orderer:${FABRIC_VERSION} 
    #     environment:
    #     - FABRIC_LOGGING_SPEC=grpc=debug:debug
    #     - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    #     - ORDERER_GENERAL_GENESISMETHOD=file
    #     - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
    #     - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
    #     - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    #     - ORDERER_GENERAL_TLS_ENABLED=true
    #     - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    #     - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
    #     - ORDERER_METRICS_PROVIDER=prometheus
 
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #     command: orderer
    #     ports:
    #     - 9050:7050
    #     - 30443:8443
 
    #     volumes:
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/channel-artifacts/:/etc/hyperledger/configtx
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/:/etc/hyperledger/msp/orderer
    #     networks:
    #         first-network:
    #             aliases:
    #             - orderer3.example.com 
    #     deploy:
    #         placement:
    #             constraints: [node.hostname == node-4]

    # orderer4_example_com:
    #     image: hyperledger/fabric-orderer:${FABRIC_VERSION} 
    #     environment:
    #     - FABRIC_LOGGING_SPEC=grpc=debug:debug
    #     - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    #     - ORDERER_GENERAL_GENESISMETHOD=file
    #     - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
    #     - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
    #     - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    #     - ORDERER_GENERAL_TLS_ENABLED=true
    #     - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    #     - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
    #     - ORDERER_METRICS_PROVIDER=prometheus
 
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #     command: orderer
    #     ports:
    #     - 10050:7050
    #     - 31443:8443
 
    #     volumes:
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/channel-artifacts/:/etc/hyperledger/configtx
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/:/etc/hyperledger/msp/orderer
    #     networks:
    #         first-network:
    #             aliases:
    #             - orderer4.example.com 
    #     deploy:
    #         placement:
    #             constraints: [node.hostname == node-5]

    # orderer5_example_com:
    #     image: hyperledger/fabric-orderer:${FABRIC_VERSION} 
    #     environment:
    #     - FABRIC_LOGGING_SPEC=grpc=debug:debug
    #     - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    #     - ORDERER_GENERAL_GENESISMETHOD=file
    #     - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
    #     - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
    #     - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    #     - ORDERER_GENERAL_TLS_ENABLED=true
    #     - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    #     - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
    #     - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    #     - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
    #     - ORDERER_METRICS_PROVIDER=prometheus
 
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #     command: orderer
    #     ports:
    #     - 11050:7050
    #     - 32443:8443
 
    #     volumes:
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/channel-artifacts/:/etc/hyperledger/configtx
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/:/etc/hyperledger/msp/orderer
    #     networks:
    #         first-network:
    #             aliases:
    #             - orderer5.example.com 
    #     deploy:
    #         placement:
    #             constraints: [node.hostname == node-6]

    peer0_org1_example_com:
        image: hyperledger/fabric-peer:${FABRIC_VERSION}
        environment:
        - FABRIC_LOGGING_SPEC=INFO
        - CORE_CHAINCODE_LOGGING_LEVEL=INFO
        - CORE_CHAINCODE_LOGGING_SHIM=INFO
        - CORE_CHAINCODE_EXECUTETIMEOUT=999999
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_PEER_ID=peer0.org1.example.com
        - CORE_PEER_ENDORSER_ENABLED=true
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
        - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=first-network
        - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
        - CORE_METRICS_PROVIDER=prometheus
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: peer node start
        ports:
        - 7051:7051
        - 7052:7052
        - 7053:7053
 
        - 39443:9443
 
        volumes:
        - /var/run/:/host/var/run/
        - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peer

        networks:
            first-network:
                aliases:
                - peer0.org1.example.com 
        deploy:
            placement:
                constraints: [node.hostname == node-7]

    peer1_org1_example_com:
        image: hyperledger/fabric-peer:${FABRIC_VERSION}
        environment:
        - FABRIC_LOGGING_SPEC=INFO
        - CORE_CHAINCODE_LOGGING_LEVEL=INFO
        - CORE_CHAINCODE_LOGGING_SHIM=INFO
        - CORE_CHAINCODE_EXECUTETIMEOUT=999999
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_PEER_ID=peer1.org1.example.com
        - CORE_PEER_ENDORSER_ENABLED=true
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
        - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=first-network
        - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
        - CORE_METRICS_PROVIDER=prometheus
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: peer node start
        ports:
        - 9051:7051
        - 9052:7052
        - 9053:7053

        # - 39443:9443

        volumes:
        - /var/run/:/host/var/run/
        - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/:/etc/hyperledger/msp/peer

        networks:
            first-network:
                aliases:
                - peer1.org1.example.com 
        deploy:
            placement:
                constraints: [node.hostname == node-10]

    # peer0_org2_example_com:
    #     image: hyperledger/fabric-peer:${FABRIC_VERSION}
    #     environment:
    #     - FABRIC_LOGGING_SPEC=INFO
    #     - CORE_CHAINCODE_LOGGING_LEVEL=INFO
    #     - CORE_CHAINCODE_LOGGING_SHIM=INFO
    #     - CORE_CHAINCODE_EXECUTETIMEOUT=999999
    #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    #     - CORE_PEER_ID=peer0.org2.example.com
    #     - CORE_PEER_ENDORSER_ENABLED=true
    #     - CORE_PEER_LOCALMSPID=Org2MSP
    #     - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
    #     - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
    #     - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
    #     - CORE_PEER_GOSSIP_USELEADERELECTION=true
    #     - CORE_PEER_GOSSIP_ORGLEADER=false
    #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
    #     - CORE_PEER_TLS_ENABLED=true
    #     - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
    #     - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
    #     - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
    #     - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=first-network
    #     - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
    #     - CORE_METRICS_PROVIDER=prometheus
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #     command: peer node start
    #     ports:
    #     - 8051:7051
    #     - 8052:7052
    #     - 8053:7053
 
    #     - 40443:9443

    #     volumes:
    #     - /var/run/:/host/var/run/
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peer
      
    #     networks:
    #         first-network:
    #             aliases:
    #             - peer0.org2.example.com 
    #     deploy:
    #         placement:
    #             constraints: [node.hostname == node-8]
                
    # peer1_org2_example_com:
    #     image: hyperledger/fabric-peer:${FABRIC_VERSION}
    #     environment:
    #     - FABRIC_LOGGING_SPEC=INFO
    #     - CORE_CHAINCODE_LOGGING_LEVEL=INFO
    #     - CORE_CHAINCODE_LOGGING_SHIM=INFO
    #     - CORE_CHAINCODE_EXECUTETIMEOUT=999999
    #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    #     - CORE_PEER_ID=peer1.org2.example.com
    #     - CORE_PEER_ENDORSER_ENABLED=true
    #     - CORE_PEER_LOCALMSPID=Org2MSP
    #     - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
    #     - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
    #     - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
    #     - CORE_PEER_GOSSIP_USELEADERELECTION=true
    #     - CORE_PEER_GOSSIP_ORGLEADER=false
    #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051
    #     - CORE_PEER_TLS_ENABLED=true
    #     - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
    #     - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
    #     - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
    #     - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=first-network
    #     - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
    #     - CORE_METRICS_PROVIDER=prometheus
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #     command: peer node start
    #     ports:
    #     - 10051:7051
    #     - 10052:7052
    #     - 10053:7053
 
    #     # - 40443:9443

    #     volumes:
    #     - /var/run/:/host/var/run/
    #     - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/:/etc/hyperledger/msp/peer
      
    #     networks:
    #         first-network:
    #             aliases:
    #             - peer1.org2.example.com 
    #     deploy:
    #         placement:
    #             constraints: [node.hostname == node-9]
                
    cli:
      image: hyperledger/fabric-tools:${FABRIC_VERSION}
      tty: true
      stdin_open: true
      environment:
        - SYS_CHANNEL=$SYS_CHANNEL
        - GOPATH=/opt/gopath
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        #- FABRIC_LOGGING_SPEC=DEBUG
        - FABRIC_LOGGING_SPEC=INFO
        - CORE_PEER_ID=cli
        - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
        - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
      command: /bin/bash
      volumes:
          - /var/run/:/host/var/run/
          - /home/user/thesis-good-reports/fabric-samples/chaincode/:/opt/gopath/src/github.com/chaincode
          - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
          - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/crypto-config/:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
          - /home/user/thesis-good-reports/fabric-samples/test-docker-stack/channel-artifacts/:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts

      networks:
          first-network:
              aliases:
              - cli
      deploy:
          placement:
              constraints: [node.hostname == node-7]

